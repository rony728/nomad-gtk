@include exports("dimlabel") {
    .dim-label {
        opacity: .5;
        text-shadow: none;
    }
}

@include exports("tooltip") {
    .tooltip,
    tooltip {
        &.background {
            &, &.csd {
                background-color: $tooltip_bg_color;
                background-clip: padding-box;
                border: 1px solid border_normal($tooltip_bg_color);
                border-radius: $roundness;
                color: $tooltip_fg_color;
            }
        }

        * {
            background-color: transparent;
            color: inherit;
        }
    }
}

@include exports("dialogs") {
    messagedialog, .message-dialog, .prompt {
        -GtkDialog-content-area-border: 0;
        -GtkDialog-action-area-border: $spacing;
        -GtkDialog-button-spacing: 0;

        margin: 0;
        padding: 0;
    }

    printdialog {
        paper {
            color: $fg_color;
            border: 1px solid $borders_color;
            background: $white;
            padding: 0;

            & {
                color: $backdrop_fg_color;
                border-color: $backdrop_borders_color;
            }
        }

        .dialog-action-box { margin: $spacing * 2; }
    }
}

@include exports("notifications") {
    frame.app-notification {
        border-style: solid;
        border-color: border_normal($osd_bg);
        border-width: 0 1px 1px;
        border-radius: 0 0 $roundness $roundness;
        padding: $spacing * 2;
        background-color: $osd_bg;
        background-image: none;
        color: $osd_fg;

        button {
            @include button($osd_bg, $osd_fg);
        }

        border {
            border: 0;
        }
    }
}

@include exports("expander") {
    expander {
        arrow {
            min-width: 16px;
            min-height: 16px;
            -gtk-icon-source: -gtk-icontheme('pan-end-symbolic');

            &:dir(rtl) { -gtk-icon-source: -gtk-icontheme('pan-end-symbolic-rtl'); }

            &:hover { color: alpha(currentColor, .8); } //only lightens the arrow

            &:checked { -gtk-icon-source: -gtk-icontheme('pan-down-symbolic'); }
        }
    }
}

@include exports("symbolicimage") {
    .image {
        color: alpha(currentColor, .5);

        &:hover { color: alpha(currentColor, .9); }

        &:selected, &:selected:hover { color: $selected_fg_color; }
    }
}

@include exports("floatingbar") {
    .floating-bar {
        @include linear-gradient($bg_color);

        border: 1px solid border_normal($bg_color);
        border-radius: $roundness;
        color: $fg_color;

        &.top {
            border-top-width: 0;
            border-top-right-radius: 0;
            border-top-left-radius: 0;
        }

        &.right {
            border-right-width: 0;
            border-top-right-radius: 0;
            border-bottom-right-radius: 0;
        }

        &.bottom {
            border-bottom-width: 0;
            border-bottom-right-radius: 0;
            border-bottom-left-radius: 0;
        }

        &.left {
            border-left-width: 0;
            border-bottom-left-radius: 0;
            border-top-left-radius: 0;
        }

        button {
            border: 0;
            background-color: transparent;
            background-image: none;
        }
    }
}

@include exports("touchbubble") {
    GtkBubbleWindow {
        border-radius: $roundness;
        background-clip: border-box;

        &.osd.background { background-color: $osd_bg; }

        .toolbar { background-color: transparent; }
    }
}

@include exports("fontviewer") {
    SushiFontWidget {
        padding: $spacing ($spacing * 2);
    }
}

@include exports("charmap") {
    GucharmapChartable {
        background-color: $base_color;
        color: $text_color;

        &:focus, &:hover, &:active, &:selected { @extend %selected; }
    }
}

@include exports("evolution") {
    EPreviewPane .entry {
        background-color: $base_color;
        color: $text_color;
    }
}

@include exports("gnome-bluetooth") {
    entry.entry.pin-entry {
        font-style: normal;
        font-size: 50px;
        padding-left: $spacing * 5;
        padding-right: $spacing * 5;
    }

    label.pin-label {
        font-style: normal;
        font-size: 50px;
    }
}

@include exports("keycap") {
    .keycap {
        min-width: 20px;
        min-height: 24px;
        margin-top: 2px;
        padding-bottom: $spacing / 2;
        padding-left: $spacing;
        padding-right: $spacing;

        color: $fg_color;
        background-color: $base_color;
        border: 1px solid;
        border-color: mix($borders_color, $bg_color, .5);
        border-radius: $roundness;
        box-shadow: inset 0 -3px mix($base_color, $bg_color, .2);
        font-size: smaller;

        & {
            background-color: $backdrop_base_color;
            color: $backdrop_fg_color;
            transition: 200ms ease-out;
        }
    }
}

@include exports("stackswitcher") {
    stackswitcher button {
        &.text-button { min-width: 80px; }

        &.circular {
            min-width: 28px;
            min-height: 28px;
            padding: 0;
        }
    }
}

@include exports("selected_items") {
    %selected_items {
        background-color: $selected_bg_color;

        @at-root %nobg_selected_items, & {
            color: $selected_fg_color;

            outline-color: transparentize($selected_fg_color, .7);

            &:disabled { color: mix($selected_fg_color, $selected_bg_color, .5); }

            & {
                background-color: $backdrop_selected_bg_color;
                color: $backdrop_selected_fg_color;

                &:disabled { color: mix($backdrop_selected_fg_color, $selected_bg_color, .3); }
            }
        }
    }
}
