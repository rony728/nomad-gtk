notebook {
	padding: 0;

	&.frame {
		border: 1px solid $borders_color;

		> header {
			margin: -1px;
			&.top { margin-bottom: 0; }
			&.bottom { margin-top: 0; }
			&.left { margin-right: 0; }
			&.right { margin-left: 0; }

			&.top, &.bottom { padding-left: 0; padding-right: 0; }
			&.left, &.right { padding-top: 0; padding-bottom: 0; }
		}
	}

	> stack:not(:only-child) {
		background-color: $bg_color;
	}

	> header {
		padding: 2px;
		background-color: $bg_color;

		&.top {	box-shadow: inset 0 -1px $borders_color; }
		&.bottom { box-shadow: inset 0 1px $borders_color; }
		&.right { box-shadow: inset	1px 0 $borders_color; }
		&.left { box-shadow: inset -1px 0 $borders_color; }

		@each $_pos, $_bpos in (top, bottom), (bottom, top), (right, left), (left, right) {
			&.#{$_pos} {
				padding-#{$_bpos}: 0;

				> tabs > tab {
					background-color: shade($base_color, .96);
					border: 1px solid $borders_color;
					padding: 2px 10px;
					min-width: 20px;
					min-height: 20px;
					transition: all .13s ease-in;
					outline-offset: -4px;
					//border-#{$_bpos}: none;

					+ tab {
						@if $_pos==top or $_pos==bottom { margin-left: 4px; }
						@else { margin-top: 4px; }
					}

					@if $_pos==top { border-radius: 2px 2px 0 0; }
					@else if $_pos==bottom { border-radius: 0 0 2px 2px; }
					@else if $_pos==left { border-radius: 2px 0 0 2px; }
					@else if $_pos==right { border-radius: 0 2px 2px 0; }
				}
			}
		}

		&.top, &.bottom {
			> tabs > arrow.up {
				-gtk-icon-source: -gtk-icontheme('pan-end-symbolic');
				&:last-child { margin-left: 2px; }
			}
			> tabs > arrow.down {
				-gtk-icon-source: -gtk-icontheme('pan-start-symbolic');
				&:first-child { margin-right: 2px; }
			}
		}

		&.left, &.right {
			> tabs > arrow.up {
				-gtk-icon-source: -gtk-icontheme('pan-down-symbolic');
				&:last-child { margin-top: 2px; }
			}
			> tabs > arrow.down {
				-gtk-icon-source: -gtk-icontheme('pan-up-symbolic');
				&:first-child { margin-bottom: 2px; }
			}
		}

		> tabs > arrow {
			color: $insensitive_fg_color;

			&:hover { color: $fg_color; }
			&:active { color: $fg_color; }
			&:disabled { color: transparentize($fg_color,0.3); }
		}

		> tabs > tab {
			color: $fg_color;
			background-color: $base_color;

			&:hover:not(:checked) {
				color: $fg_color;
				background-color: shade($base_color, 1.2);
				border-color: $borders_color;
			}

			&:checked {
				color: $selected_fg_color;
				background-color: $selected_bg_color;
				border-color: shade($selected_bg_color, .86);
			}

			//close button

			button.flat {
				min-height: 16px;
				min-width: 16px;
				margin-left: 8px;
				padding: 0;
				color: $bg_color;

				&:hover {
					@extend %undecorated_button;
					color: lighten(red, 15%);
				}
				&:active, &:active:hover {
					@extend %undecorated_button;
					color: $selected_bg_color;
				}
			}
		}
	}
}
